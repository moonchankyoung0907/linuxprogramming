STL 라이브러리에서 컨테이너 클래스, 이터레이터 클래스, 알고리즘 함수의 역할을 각각 설명하시오.
1.컨테이너 클래스-데이터를 저장하고 관리하는 객체입니다. STL 컨테이너는 다양한 데이터 구조를 지원하며, 일반적으로 시퀀스 컨테이너와 연관 컨테이너로 나뉩니다.
2.이터레이터 클래스 - 컨테이너에 저장된 요소에 접근하고 순회하는 데 사용되는 객체입니다. STL 이터레이터는 포인터처럼 작동하며, 컨테이너의 요소에 대한 읽기/쓰기 작업을 제공합니다.
3.알고리즘 함수 - 정렬, 검색, 수정 등과 같은 데이터 처리 기능을 제공합니다. STL 알고리즘은 컨테이너와 독립적이며 이터레이터를 사용하여 데이터를 조작합니다.

포인터와 iterator의 공통점과 차이점은 각각 무엇인가?
공통점 - 둘 다 데이터를 가리키는 역할을 하며, * 연산자로 값을 참조하고, ++ 연산자로 다음 요소로 이동할 수 있습니다.
차이점           포인터                /     iterator
정의      ㅣ	메모리 주소를 가리키는 변수./컨테이너의 요소를 가리키는 객체.
사용 대상  ㅣ	배열, 동적 메모리 등.	  /STL 컨테이너.
기능 지원	ㅣ단순 메모리 주소 이동.	    /컨테이너 구조에 맞춘 안전한 순회.
안전성	    ㅣ잘못된 메모리 접근 가능.	  /컨테이너 범위를 벗어나지 않도록 설계.
다형성	    ㅣ특정 자료형에 고정.	        /컨테이너 타입에 따라 동적 작동.

vector 클래스의 erase, insert 멤버함수의 매개변수, 리턴값, 기능을 설명하시오.
1.erase 멤버 함수
매개변수 - 단일 요소 제거(position: 제거할 요소를 가리키는 이터레이터.)
범위 제거(first, last: 제거할 시작과 끝 요소를 가리키는 이터레이터.)
리턴값
제거된 요소 바로 뒤를 가리키는 이터레이터를 반환합니다.
마지막 요소가 제거되었을 경우, end() 이터레이터 반환
기능
지정된 위치나 범위의 요소를 제거합니다.
제거 후, 뒤의 요소들이 앞으로 이동하며 컨테이너 크기가 줄어듭니다.

매개변수
단일 요소 삽입
position: 삽입할 위치를 가리키는 이터레이터.value: 삽입할 값.
반복된 값 삽입
position: 삽입할 위치의 이터레이터.n, value: 동일한 값을 n번 삽입.
범위 삽입
position: 삽입할 위치의 이터레이터.[first, last]: 삽입할 범위의 시작과 끝을 가리키는 이터레이터.
리턴값
삽입된 첫 번째 요소를 가리키는 이터레이터를 반환합니다.
기능
지정된 위치에 새로운 요소를 삽입합니다.
삽입 후, 뒤의 요소들이 이동하며 컨테이너 크기가 증가합니다.










